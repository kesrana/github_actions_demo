name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # 1️⃣ SOURCE stage — code quality / syntax validation
  lint:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Lint code with flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          echo "Running static analysis on source files..."
          flake8 app tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  # 2️⃣ BUILD stage — environment setup / dependency installation
  build:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim
    needs: lint
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
          echo "Environment ready for testing."

  # 3️⃣ TEST stage — run validation and verification
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install pytest
        run: pip install pytest

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest -v --maxfail=1 --disable-warnings | tee pytest.log

  # 4️⃣ UPLOAD / REPORT stage — archive test artifacts
  upload:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest.log
